name: Daily Robot Framework Tests

on:
  schedule:
    - cron: '30 3 * * *'   # 9:00 AM IST
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Google Chrome
        run: |
          sudo apt update
          sudo apt install -y wget unzip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      - name: Install ChromeDriver
        uses: nanasess/setup-chromedriver@v2
        with:
          chrome-version: latest

      - name: Run Robot Framework tests
        run: |
          mkdir -p results
          robot --outputdir results tests/

      - name: Upload Robot Results
        uses: actions/upload-artifact@v4
        with:
          name: robot-results
          path: results

      # - name: Send log.html to Slack (file upload)
      #   if: always()
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #     SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
      #   run: |
      #     curl -F file=@results/log.html \
      #          -F "initial_comment=Here is today's Robot Framework log :robot_face:" \
      #          -F "channels=$SLACK_CHANNEL_ID" \
      #          -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
      #          https://slack.com/api/files.upload

      - name: Send Slack Message with Link
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: C09ECPMQJ2C
          GITHUB_RUN_ID: ${{ github.run_id }}
          REPO: ${{ github.repository }}
        run: |
          python - <<EOF
          import os
          import requests
      
          token = os.environ['SLACK_BOT_TOKEN']
          channel_id = os.environ['SLACK_CHANNEL_ID']
          run_id = os.environ['GITHUB_RUN_ID']
          repo = os.environ['REPO']
      
          # GitHub Actions artifact URL (public link)
          file_url = f"https://github.com/{repo}/suites/{run_id}/artifacts"  # Optional: you can customize
      
          message = f"Robot Framework test completed. [Download Results]({file_url})"
      
          response = requests.post(
              "https://slack.com/api/chat.postMessage",
              headers={"Authorization": f"Bearer {token}", "Content-type": "application/json"},
              json={"channel": channel_id, "text": message}
          )
          print(response.json())
          EOF